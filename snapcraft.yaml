name: retroarch
version: "1.14.0"
title: RetroArch
summary: RetroArch is the official reference frontend for the libretro API.
description: |
  The official reference frontend for the libretro API.

  RetroArch provides a variety of advanced user-facing features and powerful configuration capabilities to programs that target the libretro API. While a majority of these programs are emulators for retro gaming consoles, various gaming engines and other multimedia applications are also represented. The programs, known as "cores", can be downloaded and updated directly from RetroArch's built-in Online Updater.

  RetroArch defaults to a gamepad-friendly 10-foot/leanback interface that is perfect for use with living-room and home theater PCs, but there is also a more traditional keyboard-and-mouse interface available by pressing F5.

  RetroArch is written in portable C and licensed GPLv3.
license: GPL-3.0
icon: snap/gui/retroarch.svg
confinement: strict
grade: stable
architectures:
- build-on: amd64
  run-on: amd64
- build-on: armhf
  run-on: armhf
- build-on: arm64
  run-on: arm64
- build-on: ppc64el
  run-on: ppc64el
base: core20

layout:
  /usr/share/vulkan:
    symlink: $SNAP/usr/share/vulkan
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so
  /usr/share/libdrm:
    bind: $SNAP/usr/share/libdrm

apps:
  retroarch:
    command: bin/desktop-launch $SNAP/usr/bin/snapcraft-preload $SNAP/usr/local/bin/retroarch.wrapper
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-gl:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/xorg
    plugs:
      - network
      - network-bind
      - x11
      - opengl
      - home
      - alsa
      - audio-playback
      - bluez
      - joystick
      - raw-usb
      - removable-media
      - wayland
      - unity7
      - desktop
      - desktop-legacy
      - screen-inhibit-control
      - browser-support
      - hardware-observe
      - mount-observe
#  daemon:
#    command: $SNAP/usr/bin/snapcraft-preload $SNAP/usr/local/bin/daemon-start.sh $SNAP/usr/local/bin/retroarch.wrapper
#    environment:
#      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-gl:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/xorg
#    daemon: simple
#    restart-condition: always
#    plugs:
#      - network
#      - network-bind
#      - opengl
#      - home
#      - alsa
#      - audio-playback
#      - bluez
#      - joystick
#      - raw-usb
#      - removable-media
#      - wayland
#      - unity7
#      - screen-inhibit-control

parts:
  snapcraft-preload:
    source: https://github.com/sergiusens/snapcraft-preload.git
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr -DLIBPATH=/lib
    build-packages:
      - on amd64:
        - gcc-multilib
        - g++-multilib
    stage-packages:
      - on amd64:
        - lib32stdc++6
  retroarch-wrapper:
    plugin: dump
    after: [desktop-qt5]
    source: .
    organize:
     retroarch.wrapper: usr/local/bin/retroarch.wrapper
#     daemon-start.sh: usr/local/bin/daemon-start.sh
    stage:
      - usr/local/bin/retroarch.wrapper
#      - usr/local/bin/daemon-start.sh
  retroarch:
   plugin: autotools
#   source-type: tar
#   source: https://github.com/libretro/RetroArch/archive/v1.13.0.tar.gz
   source-type: git
   source: https://github.com/libretro/RetroArch.git
   after: [sdl2,libdecor,retroarch-wrapper]
   build-environment:
     - MAKEFLAGS: HAVE_BUILTINZLIB=0 HAVE_ZLIB_COMMON=1
   autotools-configure-parameters:  
     - --enable-kms
     - --enable-xvideo
     - --enable-ffmpeg
     - --enable-ssa 
     - --disable-coreaudio
     - --enable-jack
     - --enable-pulse
     - --disable-roar
     - --disable-rsound
     - --disable-sdl
     - --enable-sdl2
     - --disable-vg
     - --disable-v4l2
     - --disable-xinerama
     - --enable-qt
     - --enable-vulkan
     - --enable-discord
     - --enable-dbus
   stage-packages:
     - libnotify-bin
     - fonts-dejavu-core
     - freeglut3-dev
     - libasound2
     - libavcodec58
     - libavformat58
     - libavutil56
     - libdrm2
     - libegl1-mesa
     - libfreetype6
     - libgbm1
     - libgl1-mesa-dri
     - libgl1-mesa-glx
     - libgles2-mesa
     - libjack-jackd2-0
     - libminizip1
     - libopenal1
     - libpulse0
     - libswresample3
     - libswscale5
     - libudev1
     - libusb-1.0-0
     - libwayland-client0
     - libwayland-egl1-mesa
     - libx11-6
     - libx11-dev
     - libxrandr-dev
     - libxext6
     - libxinerama1
     - libxkbcommon0
     - libxv1
     - libxxf86vm1
     - zlib1g
     - qt5-default
     - qtwayland5
     - libqt5waylandclient5
     - libstdc++6
     - libgcc1
     - liblzma5
     - libbz2-1.0
     - libpcre3
     - libsystemd0
     - libvulkan1
     - libvulkan-dev
     - mesa-vulkan-drivers
     - libass9
     - libfribidi0
     - libsdl1.2debian
     - libsdl-net1.2
     - libbluetooth3
     - libxi6
     - libaio1
   build-packages:
     - gcc
     - make
     - libasound2-dev
     - libass-dev
     - libavcodec-dev
     - libavdevice-dev
     - libavformat-dev
     - libdrm-dev
     - libegl1-mesa-dev
     - libfreetype6-dev 
     - libgbm-dev
     - libgl1-mesa-dev
     - libjack-jackd2-dev
     - libpulse-dev
     - libswscale-dev
     - libusb-1.0-0-dev
     - libudev-dev
     - libx11-xcb-dev
     - libxml2-dev
     - libxv-dev
     - mesa-common-dev
     - xserver-xorg-input-all
     - zlib1g-dev
     - qt5-default
     - libvulkan-dev
     - libxxf86vm-dev
     - libdbus-1-dev
   override-build: |
     snapcraftctl build
     ln -sf ../usr/lib/libsnapcraft-preload.so $SNAPCRAFT_PART_INSTALL/lib/libsnapcraft-preload.so    
  retroarch-filters:
    plugin: autotools
    after: [retroarch]
    source: https://github.com/libretro/RetroArch.git
    source-type: git
    override-build: |
     cd libretro-common/audio/dsp_filters/ && ./configure && make && make install DESTDIR=$SNAPCRAFT_PART_INSTALL/.config/filters/audio INSTALLDIR=
     cd ../../../gfx/video_filters/ && ./configure && make && make install DESTDIR=$SNAPCRAFT_PART_INSTALL/.config/filters/video INSTALLDIR=
    stage:
      - .config/filters/video
      - .config/filters/audio
  retroarch-assets:
    plugin: dump
    after: [retroarch-wrapper]
    source: https://github.com/libretro/retroarch-assets/archive/master.tar.gz
    source-type: tar
    organize:
     xmb: .config/assets/xmb/
     glui: .config/assets/glui/
     rgui: .config/assets/rgui/
     ozone: .config/assets/ozone/
     sounds: .config/assets/sounds/
     menu_widgets: .config/assets/menu_widgets/
    filesets:
      assets: [.config/assets/menu_widgets/*, .config/assets/sounds/*, .config/assets/ozone/*, .config/assets/rgui/*, .config/assets/xmb/*, -.config/assets/xmb/*/src, .config/assets/glui/*.png, .config/assets/glui/*.ttf]
    stage:
    - -configure
    - -Makefile
    - $assets
    prime:
    - $assets
  retroarch-autoconfig:
    plugin: dump
    after: [retroarch-assets]
    source: https://github.com/libretro/retroarch-joypad-autoconfig/archive/master.tar.gz
    source-type: tar
    organize:
      udev: .config/autoconfig/udev/
      linuxraw: .config/autoconfig/linuxraw/
      hid: .config/autoconfig/hid/
      x: .config/autoconfig/x/
    filesets:
      autoconfig: [ .config/autoconfig/udev, .config/autoconfig/linuxraw, .config/autoconfig/hid, .config/autoconfig/x]
    stage:
    - $autoconfig
    prime:
    - $autoconfig
  retroarch-database:
    plugin: dump
    after: [retroarch-autoconfig]
    source: https://github.com/libretro/libretro-database/archive/master.tar.gz
    source-type : tar
    organize: 
     rdb: .config/database/rdb/
     cursors: .config/database/cursors/
     cht: .config/cheats/
    stage:
     - .config/database
     - .config/cheats
  retroarch-info:
    plugin: dump
    after: [retroarch-database]
    source: https://github.com/libretro/libretro-super/archive/master.tar.gz
    source-type : tar
    organize:
     dist/info: .config/cores/
    stage:
     - .config/cores
  retroarch-overlays:
    plugin: dump
    after: [retroarch-info]
    source: https://github.com/libretro/common-overlays/archive/master.tar.gz
    source-type : tar
    organize:
     "*": .config/overlay/
    stage:
     - .config/overlay
  retroarch-glsl-shaders:
    plugin: dump
    after: [retroarch-overlays]
    source: https://github.com/libretro/glsl-shaders/archive/master.tar.gz
    source-type : tar
    organize:
     "*": .config/shaders/shaders_glsl/
    stage:
     - .config/shaders
  retroarch-slang-shaders:
    plugin: dump
    after: [retroarch-glsl-shaders]
    source: https://github.com/libretro/slang-shaders/archive/master.tar.gz
    source-type : tar
    organize:
     "*": .config/shaders/shaders_slang/
    stage:
     - .config/shaders
  # Provides libdecor to implement Wayland CSD on desktop environments not using xdg-decoration (GNOME), SDL2 >= v2.0.16 adds support for libdecor
  # SDL2 in focal repositories is at v2.0.10 so we need to include a newer version.
  libdecor:
    plugin: meson
    source: https://gitlab.gnome.org/jadahl/libdecor.git
    source-type: git
    source-tag: "0.1.0"
    meson-parameters:
      - -Dprefix=/usr
      - -Ddemo=false
    stage-packages:
      - libwayland-cursor0
      - libwayland-client0
      - libdbus-1-3
    build-packages:
      - wayland-protocols
      - libwayland-dev
      - libcairo2-dev
      - libpango1.0-dev
  sdl2:
      plugin: cmake
      after: [libdecor]
      source: https://github.com/libsdl-org/SDL.git
      source-tag: release-2.0.20
      cmake-generator: Ninja
      cmake-parameters:
        - -DCMAKE_BUILD_TYPE=Release
        - -DCMAKE_INSTALL_PREFIX=/usr
        - -DCMAKE_C_COMPILER=gcc-10
        - -DCMAKE_CXX_COMPILER=g++-10
        - -DLIB_INSTALL_DIR:PATH=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
        - -DSHARE_INSTALL_PREFIX:PATH=/usr/share
        - -DINCLUDE_INSTALL_DIR:PATH=/usr/include
        - -DSDL_PULSEAUDIO_SHARED=ON
        - -DSDL_DLOPEN=ON
        - -DARTS=OFF
        - -DESD=OFF
        - -DNAS=OFF
        - -DSDL_VIDEO_KMSDRM=ON
        - -DSDL_JACK_SHARED=ON
        - -DSDL_PIPEWIRE_SHARED=ON
        - -DSDL_ALSA=ON
        - -DSDL_STATIC=ON
        - -DSDL_VIDEO_VULKAN=ON
        - -DSDL_LIBDECOR_SHARED=ON
        - -DSDL_VIDEO_WAYLAND=ON
        - -DRPATH=OFF
        - -DCLOCK_GETTIME=ON
      override-build: |
          snapcraftctl build
          rsync -a --ignore-existing $SNAPCRAFT_PART_INSTALL/ /
      build-packages:
        - gcc-10
        - g++-10
        - rsync
      stage:
        - -usr/include
        - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/cmake
  # This part installs the qt5 dependencies and a `desktop-launch` script to initialise
  # desktop-specific features such as fonts, themes and the XDG environment.
  # 
  # It is copied straight from the snapcraft desktop helpers project. Please periodically
  # check the source for updates and copy the changes.
  #    https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  # 
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    plugin: make
    after: [snapcraft-preload]
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
      - build-essential
      - qtbase5-dev
      - dpkg-dev
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libqt5gui5
      - libgtk2.0-0
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - try: [appmenu-qt5] # not available on core18
      - locales-all
      - xdg-user-dirs
      - fcitx-frontend-qt5
