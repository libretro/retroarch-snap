#!/bin/bash

set -e

MAINCONFIG="$SNAP_USER_DATA/.config/retroarch/retroarch.cfg"
FILESETS=('assets' 'autoconfig' 'cheats' 'cores' 'database' 'filters' 'overlay' 'shaders')

_notify() {
   local msg=$1
   local timeout=2000
   local icon="$SNAP/.config/assets/xmb/monochrome/png/retroarch.png"

   notify-send "RetroArch" "${msg}" -i ${icon} -t $timeout
}

#Notify user that we're working so they don't think anything is broken
[ ! -d "$SNAP_USER_DATA/.config/retroarch" ] && _notify "Preparing the environment..."

#Notify the user that it might take a while to copy everything
[ ! -d "$SNAP_USER_DATA/.config/retroarch" ] && _notify "Copying necessary files (this could take a minute)..."

#Create RetroArch user configuration directory if doesn't exist
[ ! -d "$SNAP_USER_DATA/.config" ] && mkdir "$SNAP_USER_DATA/.config"
[ ! -d "$SNAP_USER_DATA/.config/retroarch" ] && mkdir "$SNAP_USER_DATA/.config/retroarch"

#Copy filesets if doesn't exist
for fileset in ${FILESETS[@]};
do
   if [ ! -d "$SNAP_USER_DATA/.config/retroarch/$fileset" ];
   then
      cp -R "$SNAP/.config/$fileset" "$SNAP_USER_DATA/.config/retroarch"
   fi
done

[ ! -f "$SNAP_USER_DATA/.config/retroarch/retroarch.cfg" ] && _notify "Done!"

#If the config file doesn't exist, create it and point the browser directory outside of the snap package
[ ! -f "$MAINCONFIG" ] && echo "rgui_browser_directory = $SNAP_REAL_HOME" >> "$MAINCONFIG" && echo "input_joypad_driver = sdl2" >> "$MAINCONFIG"

exec "$@"
